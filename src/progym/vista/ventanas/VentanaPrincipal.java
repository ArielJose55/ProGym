/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package progym.vista.ventanas;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import javax.swing.JFrame;
import progym.controlador.ClikSobreListener;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Observable;
import java.util.Observer;
import java.util.ResourceBundle;
import javax.swing.AbstractButton;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JLabel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.swingx.JXFrame;
import progym.controlador.PasaSobreListener;
import progym.logica.basica.daos.RutinaController;
import progym.logica.basica.daos.SerieController;
import progym.logica.basica.entidades.Serie;
import progym.logica.basica.reproductor.LectorXMLReproductor;
import progym.logica.basica.reproductor.Mp3Cancion;
import progym.logica.basica.reproductor.ThreadReproductorMP3;
import progym.logica.basica.util.FactoryTable;
import progym.logica.basica.util.Fecha;
import progym.logica.basica.util.IdentifyRutina;
import progym.logica.basica.util.Notificador;
import progym.logica.basica.util.threads.ThreadRunArduino;
import progym.logica.basica.util.SearchNamePuerto;
import progym.logica.basica.util.threads.ThreadConnectionDatabaseSerie;
import progym.logica.basica.util.threads.ThreadPanelEscritor;
import progym.logica.modelos.ModeloListaSeleccion;
import progym.logica.modelos.ModeloListaSerie;
import progym.logica.modelos.ListaCeldaRenderer;
import progym.logica.modelos.ModeloTabla;
import progym.logica.modelos.PropiedadesTabla;
import progym.logica.modelos.TablaImple;
import progym.recursos.reportes.ReporteDataSource;
import progym.vista.dialogos.DialogoChartInfo;
import progym.vista.dialogos.DialogoChartRendimiento;

/**
 *
 * @author Ariel Jose Arnedo
 */
public class VentanaPrincipal extends JXFrame implements Observer{
    
    private final javax.swing.ImageIcon WAIT = new ImageIcon(getClass().getResource("/progym/recursos/imagenes/git_Wait32x32.gif"));
    private ThreadRunArduino runArduino;
    private final ModeloListaSerie MODELO_LISTA = new ModeloListaSerie();
    private final ModeloListaSeleccion MODELO_SELECCION_LISTA = new ModeloListaSeleccion((byte)1);
    private final ModeloListaSeleccion MODELO_SELECCION_TABLE = new ModeloListaSeleccion((byte)2);
    private final ModeloTabla MODELO_TABLA = new ModeloTabla();
    private  ThreadReproductorMP3 reproductorMusica;
    private ThreadPanelEscritor hiloEscritorPanel;
    
    private static int contRepeticionColumn = 2;
    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        super("ProGym");
        this.setWaiting(true);
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        runArduino();
        initComponents();
        mostrarBotonesManuales(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupButtonsMp3 = new javax.swing.ButtonGroup();
        jSeparator15 = new javax.swing.JSeparator();
        jXFrame1 = new org.jdesktop.swingx.JXFrame();
        menuHerra = new javax.swing.JToolBar();
        botonHerraNuevo = new javax.swing.JButton();
        botonHerraAbrir = new javax.swing.JButton();
        botonHerraGuardar = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        botonHerraRunRutina = new javax.swing.JToggleButton();
        jSeparator11 = new javax.swing.JToolBar.Separator();
        botonHerraPreviusMusic = new javax.swing.JButton();
        botonHerraPlay = new javax.swing.JToggleButton();
        botonHerraNextMusic = new javax.swing.JButton();
        jSeparator14 = new javax.swing.JToolBar.Separator();
        botonHerraBajarSerie = new javax.swing.JButton();
        botonHerraAÃ±adirSerie = new javax.swing.JButton();
        botonHerraSubirSerie = new javax.swing.JButton();
        separadorRemovible = new javax.swing.JToolBar.Separator();
        jButton1 = new javax.swing.JButton();
        panelDesktop = new javax.swing.JPanel();
        panelDivisor = new javax.swing.JSplitPane();
        panelDerecho = new javax.swing.JPanel();
        panelDivisorDerecho = new javax.swing.JSplitPane();
        PanelTablaReporte = new org.jdesktop.swingx.JXTitledPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaReporteSeries = new javax.swing.JTable();
        scrollMuestraProceso = new javax.swing.JScrollPane();
        editorPanelProceso = new org.jdesktop.swingx.JXEditorPane();
        panelIzquierdo = new javax.swing.JPanel();
        panelConTitulo = new org.jdesktop.swingx.JXTitledPanel();
        jSeparator10 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaDeSeries = new javax.swing.JList();
        panelState = new javax.swing.JPanel();
        etiFechaName = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        etiCodFechaActual = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        etiMuestraRutina = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        etiMuestraConexion = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        etiMuestraReproduccion = new javax.swing.JLabel();
        jSeparator13 = new javax.swing.JSeparator();
        etiLoading = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        itemSalir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        itemCopiar = new javax.swing.JMenuItem();
        itemPegar = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        itemConsultaRutina = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        itemReporteRutinaActual = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        menuConfiArduino = new javax.swing.JMenu();
        menuSelectPort = new javax.swing.JMenu();
        itemConfiRunArduino = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JPopupMenu.Separator();
        itemConfiRutina = new javax.swing.JMenuItem();
        itemConfiSerie = new javax.swing.JMenuItem();
        jSeparator12 = new javax.swing.JPopupMenu.Separator();
        jMenuItem9 = new javax.swing.JMenuItem();
        menuListaRepository = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        menuHerra.setRollover(true);
        menuHerra.setMinimumSize(new java.awt.Dimension(135, 48));
        menuHerra.setPreferredSize(new java.awt.Dimension(135, 48));

        botonHerraNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/progym/recursos/imagenes/icon_New32x32.png"))); // NOI18N
        botonHerraNuevo.setFocusPainted(false);
        botonHerraNuevo.setFocusable(false);
        botonHerraNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonHerraNuevo.setMargin(new java.awt.Insets(2, 2, 2, 2));
        botonHerraNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonHerraNuevo.addMouseListener(new PasaSobreListener("botonHerraNuevo"));
        botonHerraNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonHerraNuevoActionPerformed(evt);
            }
        });
        menuHerra.add(botonHerraNuevo);

        botonHerraAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/progym/recursos/imagenes/icon_Open32x32.png"))); // NOI18N
        botonHerraAbrir.setFocusable(false);
        botonHerraAbrir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonHerraAbrir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonHerraAbrir.addMouseListener(new PasaSobreListener("botonHerraAbrir"));
        menuHerra.add(botonHerraAbrir);

        botonHerraGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/progym/recursos/imagenes/icon_Save32x32.png"))); // NOI18N
        botonHerraGuardar.setFocusable(false);
        botonHerraGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonHerraGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonHerraGuardar.addMouseListener(new PasaSobreListener("botonHerraGuardar"));
        botonHerraGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonHerraGuardarActionPerformed(evt);
            }
        });
        botonHerraGuardar.setVisible(false);
        menuHerra.add(botonHerraGuardar);
        menuHerra.add(jSeparator4);

        botonHerraRunRutina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/progym/recursos/imagenes/icon_RunRutina32x32.png"))); // NOI18N
        botonHerraRunRutina.setToolTipText("Empezar Rutina");
        botonHerraRunRutina.setFocusPainted(false);
        botonHerraRunRutina.setFocusable(false);
        botonHerraRunRutina.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonHerraRunRutina.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/progym/recursos/imagenes/icon_EmpiezoRutina.png"))); // NOI18N
        botonHerraRunRutina.addMouseListener(new PasaSobreListener("botonHerraRunRutina"));
        botonHerraRunRutina.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonHerraRunRutina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonHerraRunRutinaActionPerformed(evt);
            }
        });
        menuHerra.add(botonHerraRunRutina);
        menuHerra.add(jSeparator11);

        botonHerraPreviusMusic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/progym/recursos/imagenes/icon_PreviusMusic32x32.png"))); // NOI18N
        botonHerraPreviusMusic.setFocusPainted(false);
        botonHerraPreviusMusic.setFocusable(false);
        botonHerraPreviusMusic.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonHerraPreviusMusic.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonHerraPreviusMusic.addMouseListener(new ClikSobreListener("botonHerraPreviusMusic"));
        botonHerraPreviusMusic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonHerraPreviusMusicActionPerformed(evt);
            }
        });
        menuHerra.add(botonHerraPreviusMusic);

        botonHerraPlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/progym/recursos/imagenes/icon_PlayMusic32x32.png"))); // NOI18N
        botonHerraPlay.setFocusPainted(false);
        botonHerraPlay.setFocusable(false);
        botonHerraPlay.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonHerraPlay.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/progym/recursos/imagenes/icon_PauseMusic32x32.png"))); // NOI18N
        botonHerraPlay.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonHerraPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonHerraPlayActionPerformed(evt);
            }
        });
        menuHerra.add(botonHerraPlay);

        botonHerraNextMusic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/progym/recursos/imagenes/icon_NextMusic32x32.png"))); // NOI18N
        botonHerraNextMusic.setFocusable(false);
        botonHerraNextMusic.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonHerraNextMusic.addMouseListener(new ClikSobreListener("botonHerraNextMusic"));
        botonHerraNextMusic.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonHerraNextMusic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonHerraNextMusicActionPerformed(evt);
            }
        });
        menuHerra.add(botonHerraNextMusic);
        menuHerra.add(jSeparator14);

        botonHerraBajarSerie.setIcon(new javax.swing.ImageIcon(getClass().getResource("/progym/recursos/imagenes/icon_Bajar32x32.png"))); // NOI18N
        botonHerraBajarSerie.setFocusable(false);
        botonHerraBajarSerie.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonHerraBajarSerie.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonHerraBajarSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonHerraBajarSerieActionPerformed(evt);
            }
        });
        menuHerra.add(botonHerraBajarSerie);

        botonHerraAÃ±adirSerie.setIcon(new javax.swing.ImageIcon(getClass().getResource("/progym/recursos/imagenes/iconAddSerie32x32.png"))); // NOI18N
        botonHerraAÃ±adirSerie.setFocusable(false);
        botonHerraAÃ±adirSerie.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonHerraAÃ±adirSerie.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonHerraAÃ±adirSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonHerraAÃ±adirSerieActionPerformed(evt);
            }
        });
        menuHerra.add(botonHerraAÃ±adirSerie);

        botonHerraSubirSerie.setIcon(new javax.swing.ImageIcon(getClass().getResource("/progym/recursos/imagenes/icon_Subir32x32.png"))); // NOI18N
        botonHerraSubirSerie.setFocusable(false);
        botonHerraSubirSerie.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonHerraSubirSerie.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonHerraSubirSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonHerraSubirSerieActionPerformed(evt);
            }
        });
        menuHerra.add(botonHerraSubirSerie);
        menuHerra.add(separadorRemovible);
        separadorRemovible.setVisible(false);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/progym/recursos/imagenes/icon_PararRutina32x32.png"))); // NOI18N
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        menuHerra.add(jButton1);
        jButton1.setVisible(false);

        getContentPane().add(menuHerra, java.awt.BorderLayout.PAGE_START);

        panelDesktop.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 116, 117)));
        panelDesktop.setLayout(new java.awt.GridLayout(1, 0, 1, 1));

        panelDivisor.setDividerLocation(1000);
        panelDivisor.setResizeWeight(1.0);
        panelDivisor.setMinimumSize(new java.awt.Dimension(217, 300));
        panelDivisor.setPreferredSize(new java.awt.Dimension(217, 300));

        panelDerecho.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        panelDerecho.setMinimumSize(new java.awt.Dimension(700, 0));
        panelDerecho.setLayout(new java.awt.BorderLayout());

        panelDivisorDerecho.setDividerLocation(200);
        panelDivisorDerecho.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        panelDivisorDerecho.setResizeWeight(1.0);
        panelDivisorDerecho.setOneTouchExpandable(true);

        PanelTablaReporte.setMaximumSize(new java.awt.Dimension(2147483647, 30000));
        PanelTablaReporte.setMinimumSize(new java.awt.Dimension(31, 300));
        PanelTablaReporte.setName(""); // NOI18N
        PanelTablaReporte.setPreferredSize(new java.awt.Dimension(456, 400));
        PanelTablaReporte.getContentContainer().setLayout(new java.awt.BorderLayout());
        PanelTablaReporte.setTitleFont(new Font("Arial", 1, 18));

        tablaReporteSeries.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaReporteSeries.setModel(MODELO_TABLA);
        tablaReporteSeries.setGridColor(new java.awt.Color(53, 88, 120));
        tablaReporteSeries.setSelectionBackground(new java.awt.Color(201, 238, 226));
        tablaReporteSeries.setSelectionModel(MODELO_SELECCION_TABLE);
        jScrollPane2.setViewportView(tablaReporteSeries);

        PanelTablaReporte.getContentContainer().add(jScrollPane2, java.awt.BorderLayout.CENTER);

        panelDivisorDerecho.setLeftComponent(PanelTablaReporte);

        scrollMuestraProceso.setMaximumSize(new java.awt.Dimension(300, 200));
        scrollMuestraProceso.setMinimumSize(new java.awt.Dimension(23, 100));
        scrollMuestraProceso.setPreferredSize(new java.awt.Dimension(200, 200));
        scrollMuestraProceso.setWheelScrollingEnabled(false);

        editorPanelProceso.setEditable(false);
        editorPanelProceso.setMaximumSize(new java.awt.Dimension(30000, 100));
        scrollMuestraProceso.setViewportView(editorPanelProceso);

        panelDivisorDerecho.setRightComponent(scrollMuestraProceso);

        panelDerecho.add(panelDivisorDerecho, java.awt.BorderLayout.CENTER);

        panelDivisor.setLeftComponent(panelDerecho);

        panelIzquierdo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        panelIzquierdo.setMaximumSize(new java.awt.Dimension(400, 32767));
        panelIzquierdo.setMinimumSize(new java.awt.Dimension(200, 0));
        panelIzquierdo.setPreferredSize(new java.awt.Dimension(98, 332));
        panelIzquierdo.setLayout(new java.awt.BorderLayout());

        panelConTitulo.setTitle("");
        panelConTitulo.getContentContainer().setLayout(new java.awt.BorderLayout());
        panelConTitulo.getContentContainer().add(jSeparator10, java.awt.BorderLayout.PAGE_START);

        listaDeSeries.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 255)), "Lista de Series", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Arial", 1, 14), new java.awt.Color(133, 97, 152))); // NOI18N
        listaDeSeries.setModel(MODELO_LISTA);
        listaDeSeries.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaDeSeries.setCellRenderer(new ListaCeldaRenderer());
        listaDeSeries.setSelectionBackground(new java.awt.Color(204, 204, 255));
        listaDeSeries.setSelectionForeground(new java.awt.Color(204, 0, 0));
        listaDeSeries.setSelectionModel(MODELO_SELECCION_LISTA);
        jScrollPane1.setViewportView(listaDeSeries);

        panelConTitulo.getContentContainer().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        panelIzquierdo.add(panelConTitulo, java.awt.BorderLayout.CENTER);

        panelDivisor.setRightComponent(panelIzquierdo);

        panelDesktop.add(panelDivisor);

        getContentPane().add(panelDesktop, java.awt.BorderLayout.CENTER);

        etiFechaName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        etiFechaName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        etiFechaName.setText("");

        jSeparator5.setForeground(new java.awt.Color(0, 101, 98));
        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);

        etiCodFechaActual.setFont(etiFechaName.getFont());
        etiCodFechaActual.setForeground(new java.awt.Color(58, 58, 106));
        etiCodFechaActual.setText("");

        jSeparator6.setForeground(new java.awt.Color(160, 78, 74));
        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);

        etiMuestraRutina.setFont(etiFechaName.getFont());
        etiMuestraRutina.setForeground(new java.awt.Color(255, 72, 86));
        etiMuestraRutina.setText("");

        jSeparator7.setForeground(new java.awt.Color(208, 67, 42));
        jSeparator7.setOrientation(javax.swing.SwingConstants.VERTICAL);

        etiMuestraConexion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        etiMuestraConexion.setForeground(new java.awt.Color(53, 153, 15));
        etiMuestraConexion.setText("");

        jSeparator9.setForeground(new java.awt.Color(0, 51, 51));
        jSeparator9.setOrientation(javax.swing.SwingConstants.VERTICAL);

        etiMuestraReproduccion.setFont(etiFechaName.getFont());
        etiMuestraReproduccion.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jSeparator13.setOrientation(javax.swing.SwingConstants.VERTICAL);

        etiLoading.setMaximumSize(new java.awt.Dimension(32, 32));
        etiLoading.setMinimumSize(new java.awt.Dimension(32, 32));
        etiLoading.setPreferredSize(new java.awt.Dimension(32, 32));

        javax.swing.GroupLayout panelStateLayout = new javax.swing.GroupLayout(panelState);
        panelState.setLayout(panelStateLayout);
        panelStateLayout.setHorizontalGroup(
            panelStateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelStateLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(etiCodFechaActual, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(etiMuestraRutina, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(etiLoading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(122, 122, 122)
                .addComponent(etiMuestraReproduccion, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(etiMuestraConexion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(etiFechaName, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelStateLayout.setVerticalGroup(
            panelStateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator5)
            .addGroup(panelStateLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(etiLoading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3))
            .addGroup(panelStateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelStateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(etiMuestraReproduccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator7)
                    .addComponent(etiCodFechaActual, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                    .addComponent(jSeparator9)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelStateLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator13, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(etiMuestraRutina, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(etiFechaName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(etiMuestraConexion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(panelState, java.awt.BorderLayout.PAGE_END);

        menuArchivo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        menuArchivo.setForeground(new java.awt.Color(95, 37, 93));
        menuArchivo.setText("Archivo");
        menuArchivo.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/progym/recursos/imagenes/icon_New16x16.png"))); // NOI18N
        jMenuItem1.setText("Nueva Rutina...");
        menuArchivo.add(jMenuItem1);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/progym/recursos/imagenes/icon_Open16x16.png"))); // NOI18N
        jMenuItem6.setText("Abrir...");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        menuArchivo.add(jMenuItem6);
        menuArchivo.add(jSeparator3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/progym/recursos/imagenes/icon_Save16x16.png"))); // NOI18N
        jMenuItem4.setText("Guardar");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        menuArchivo.add(jMenuItem4);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("Guardar Como...");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        menuArchivo.add(jMenuItem5);
        menuArchivo.add(jSeparator1);

        itemSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/progym/recursos/imagenes/icon_Apagar_16x16.png"))); // NOI18N
        itemSalir.setText("Salir");
        itemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSalirActionPerformed(evt);
            }
        });
        menuArchivo.add(itemSalir);

        jMenuBar1.add(menuArchivo);

        jMenu2.setForeground(menuArchivo.getForeground());
        jMenu2.setText("Editar");
        jMenu2.setFont(menuArchivo.getFont());

        itemCopiar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        itemCopiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/progym/recursos/imagenes/icon_Copy16x16.png"))); // NOI18N
        itemCopiar.setText("Copiar");
        itemCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemCopiarActionPerformed(evt);
            }
        });
        jMenu2.add(itemCopiar);

        itemPegar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        itemPegar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/progym/recursos/imagenes/icon_Paste16x16.png"))); // NOI18N
        itemPegar.setText("Pegar");
        jMenu2.add(itemPegar);

        jMenuBar1.add(jMenu2);

        jMenu1.setForeground(menuArchivo.getForeground());
        jMenu1.setText("Consultar");
        jMenu1.setFont(menuArchivo.getFont());

        itemConsultaRutina.setText("Rutina en Base de Datos");
        itemConsultaRutina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemConsultaRutinaActionPerformed(evt);
            }
        });
        jMenu1.add(itemConsultaRutina);

        jMenuItem11.setText("Serie en Base de Datos");
        jMenu1.add(jMenuItem11);

        jMenuBar1.add(jMenu1);

        jMenu6.setForeground(menuArchivo.getForeground());
        jMenu6.setText("Reportes");
        jMenu6.setFont(menuArchivo.getFont());

        itemReporteRutinaActual.setText("Reporte de Rutina Actual");
        itemReporteRutinaActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemReporteRutinaActualActionPerformed(evt);
            }
        });
        jMenu6.add(itemReporteRutinaActual);

        jMenuBar1.add(jMenu6);

        jMenu4.setForeground(menuArchivo.getForeground());
        jMenu4.setText("Graficos");
        jMenu4.setFont(menuArchivo.getFont());

        jMenuItem7.setText("Rendimiento...");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem7);

        jMenuItem8.setText("Progresibidad...");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem8);

        jMenuBar1.add(jMenu4);

        jMenu3.setForeground(menuArchivo.getForeground());
        jMenu3.setText("Configuracion");
        jMenu3.setFont(menuArchivo.getFont());

        menuConfiArduino.setIcon(new javax.swing.ImageIcon(getClass().getResource("/progym/recursos/imagenes/icon_ConfiArduinoPort16x26.png"))); // NOI18N
        menuConfiArduino.setText("Arduino");

        menuSelectPort.setText("Puerto de Entrada");

        if(!SearchNamePuerto.getSearchNamePuerto().getListaPorts().isEmpty()){
            javax.swing.ButtonGroup grupo=new javax.swing.ButtonGroup();
            for(int i=0; i < SearchNamePuerto.getSearchNamePuerto().getListaPorts().size(); i++){
                javax.swing.JCheckBoxMenuItem item=new javax.swing.JCheckBoxMenuItem(SearchNamePuerto.getSearchNamePuerto().getListaPorts().get(i));
                item.addActionListener(new ActionListener(){
                    public void actionPerformed(ActionEvent e){
                        itemPortActionPerformed(e);
                    }
                });
                grupo.add(item);
                menuSelectPort.add(item);
            }
        }else{
            javax.swing.JMenuItem item=new javax.swing.JMenuItem("No hay Puertos Disponibles");
            item.setForeground(Color.RED);
            menuSelectPort.add(item);
        }

        menuConfiArduino.add(menuSelectPort);

        itemConfiRunArduino.setText((runArduino.isIsconectado())?"Desconectar Arduino":"Arrancar sin Arduino");
        itemConfiRunArduino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemConfiRunArduinoActionPerformed(evt);
            }
        });
        menuConfiArduino.add(itemConfiRunArduino);

        jMenu3.add(menuConfiArduino);
        jMenu3.add(jSeparator8);

        itemConfiRutina.setText("Rutinas...");
        itemConfiRutina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemConfiRutinaActionPerformed(evt);
            }
        });
        jMenu3.add(itemConfiRutina);

        itemConfiSerie.setText("Series...");
        itemConfiSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemConfiSerieActionPerformed(evt);
            }
        });
        jMenu3.add(itemConfiSerie);
        jMenu3.add(jSeparator12);

        jMenuItem9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/progym/recursos/imagenes/icon_Music16x16.png"))); // NOI18N
        jMenuItem9.setText("Seleccionar Archivos de Musica");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem9);

        menuListaRepository.setText("Lista de ReproducciÃ³n");
        jMenu3.add(menuListaRepository);

        jMenuBar1.add(jMenu3);

        jMenu5.setForeground(menuArchivo.getForeground());
        jMenu5.setText("Ayuda");
        jMenu5.setFont(menuArchivo.getFont());

        jMenuItem2.setText("Documentacion");
        jMenu5.add(jMenuItem2);
        jMenu5.add(jSeparator2);

        jMenuItem3.setText("Acerca de");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem3);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSalirActionPerformed
        doClose();
    }//GEN-LAST:event_itemSalirActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void botonHerraGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonHerraGuardarActionPerformed
        Iterator iterador;
        try{
            if(!(MODELO_TABLA.getDatos().get(0) instanceof Serie)) throw new UnsupportedOperationException();
            iterador = MODELO_TABLA.getDatos().iterator();
        }catch(  NullPointerException | UnsupportedOperationException ex){
            javax.swing.JOptionPane.showMessageDialog(menuHerra, "" , "" , javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }
        SerieController sc = new SerieController();
        boolean erroresOcurridos = false;
        while(iterador.hasNext()){
            try{
                Serie serie = (Serie)iterador.next();
                try{
                    sc.aÃ±adirSerie(serie, Fecha.getCodFechaRutina());
                }catch(SQLException ex){
                    sc.editarSerie(serie);
                }
            }catch(Exception ex){
                erroresOcurridos = true;
                continue;
            }
        }
        javax.swing.JOptionPane.showMessageDialog(
                panelDerecho,
                ((erroresOcurridos) ? "":""),
                "InformaciÃ³n de Estado de Serie",
                javax.swing.JOptionPane.INFORMATION_MESSAGE
        );
    }//GEN-LAST:event_botonHerraGuardarActionPerformed

    
    private void botonHerraNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonHerraNuevoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonHerraNuevoActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
        conexionSerie = new ThreadConnectionDatabaseSerie();
        try {
            etiFechaName.setText(IdentifyRutina.getIdentitifyRutina().getNameFechaActual());
            etiCodFechaActual.setText(IdentifyRutina.getIdentitifyRutina().getCodFechaActual()+"");
            etiMuestraRutina.setText(IdentifyRutina.getIdentitifyRutina().getRutinaActual());
            panelConTitulo.setTitle(IdentifyRutina.getIdentitifyRutina().getRutinaActual());
            panelConTitulo.setTitleFont(new Font("Arial", 1, 18));
            panelConTitulo.setToolTipText("<html>"
                    + "<body bgcolor=\"#CCCCCC\"><h><font face=\"ARIAL\" color=\"#FF0000\" size=\"4\">Rutina Actual</font></h>"
                  + "<p>Muesta la rutina, con los nombres de la series de hoy</p>"
                    + "</body>"
                    + "</html>");
            
        } catch (Exception ex) {
            etiFechaName.setText("Fecha no obtenida");
            etiCodFechaActual.setText("########");
            etiMuestraRutina.setText("Rutina no obtenida");
        }
    }//GEN-LAST:event_formWindowActivated

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        botonHerraRunRutina.setEnabled(runArduino.isIsconectado());
        hiloEscritorPanel = new ThreadPanelEscritor(editorPanelProceso);
        try {
            hiloEscritorPanel.despierta("Iniciando Reproductor...");
            
            reproductorMusica = new ThreadReproductorMP3();
            
            hiloEscritorPanel.despierta("Reproductor Iniciado");
            
        } catch (Exception ex) {
            etiMuestraReproduccion.setText(ex.getMessage());
            hiloEscritorPanel.despierta(ex.getMessage());
            botonHerraPreviusMusic.setEnabled(false);
            botonHerraPlay.setEnabled(false);
            botonHerraNextMusic.setEnabled(false);
        }
        Notificador.getNotificador().aÃ±adirObsevador(this);
        actualizaEtiquetaConexion();
    }//GEN-LAST:event_formWindowOpened

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void itemConfiRutinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemConfiRutinaActionPerformed
        
    }//GEN-LAST:event_itemConfiRutinaActionPerformed

    private void itemConfiSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemConfiSerieActionPerformed
      
    }//GEN-LAST:event_itemConfiSerieActionPerformed

    private void itemCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemCopiarActionPerformed
        
    }//GEN-LAST:event_itemCopiarActionPerformed

    private void botonHerraRunRutinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonHerraRunRutinaActionPerformed
        if(botonHerraRunRutina.isSelected()){
            final Runnable run=new Runnable() {

                @Override
                public void run() {
                    try {
//                        listaDeSeries.setSelectedIndex(0);
                        MODELO_SELECCION_LISTA.setSelectedItem(selectRow);
                        muestraTitulPanel();
                        MODELO_TABLA.setPropiedades( new PropiedadesTabla(TablaImple.TABLA_MUESTRA));
                        if(new SerieController().isEmplyListaSerie(IdentifyRutina.getIdentitifyRutina().getCodFechaActual())){
                            MODELO_TABLA.addDato(getSerieActualForTabla());
                            MODELO_SELECCION_TABLE.setSelectedItem(selectRow);
                        }else{
                            MODELO_TABLA.addNewDatos(new SerieController().getListaSeries(IdentifyRutina.getIdentitifyRutina().getCodFechaActual()));
                            MODELO_SELECCION_LISTA.setSelectedItem(MODELO_TABLA.getRowCount()-1);
                            MODELO_SELECCION_TABLE.setSelectedItem(MODELO_TABLA.getRowCount()-1);
                        }
                        botonHerraRunRutina.setEnabled(false);
                        temp=true;
                        hiloEscritorPanel.despierta("Se Inicio la Rutina de Hoy");                      
                    } catch (Exception ex) {
                        hiloEscritorPanel.despierta(ex.getMessage());
                    }
                }
                
            };
            Thread hilo=new Thread(run);
            hilo.start();
        }
    }//GEN-LAST:event_botonHerraRunRutinaActionPerformed

    private void botonHerraPreviusMusicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonHerraPreviusMusicActionPerformed
        try {
            reproductorMusica.previusMP3();
            etiMuestraReproduccion.setText(reproductorMusica.getNombreMP3Running());
        } catch (Exception ex) {
            etiMuestraReproduccion.setText("Error al Reproducir "+reproductorMusica.getNombreMP3Running());
        }
    }//GEN-LAST:event_botonHerraPreviusMusicActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        new DialogoChartInfo(this).setVisible(true);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        new DialogoChartRendimiento(this).setVisible(true);
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        etiLoading.setIcon(WAIT);
        final Runnable runnable = new Runnable() {
            @Override
            public void run() {
                
                javax.swing.JFileChooser carga;
                try{
                    carga=new javax.swing.JFileChooser(LectorXMLReproductor.getLectorXMLReproductor().getRutaParent());
                }catch(Exception ex){
                    carga=new javax.swing.JFileChooser();
                }
                
                carga.setFileFilter(new FileNameExtensionFilter("Archivos Mp3", "mp3"));
                carga.setAcceptAllFileFilterUsed(false);
                carga.setMultiSelectionEnabled(true);
                etiLoading.setIcon(null);
                
                if(carga.showOpenDialog(VentanaPrincipal.this)==javax.swing.JFileChooser.APPROVE_OPTION){
                    
                     reproductorMusica.setFilesMP3s(carga.getSelectedFiles());
                     
                     if(!botonHerraPlay.isEnabled()){
                         botonHerraPreviusMusic.setEnabled(true);
                         botonHerraPlay.setEnabled(true);
                         botonHerraNextMusic.setEnabled(true);
                     }
                     VentanaPrincipal.this.getListaMP3(false);
                }
            }
        };
        Thread hilito=new Thread(runnable);
        hilito.start();
        
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void botonHerraNextMusicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonHerraNextMusicActionPerformed
        try {
            reproductorMusica.nextMp3();
            etiMuestraReproduccion.setText(reproductorMusica.getNombreMP3Running());
            
        } catch (Exception ex) {
            etiMuestraReproduccion.setText("Error al Reproducir "+reproductorMusica.getNombreMP3Running());
        }
    }//GEN-LAST:event_botonHerraNextMusicActionPerformed

    private void botonHerraPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonHerraPlayActionPerformed
        javax.swing.JToggleButton boton=(javax.swing.JToggleButton)evt.getSource();
        if(boton.isSelected()){
            try {
                reproductorMusica.reproducirMP3();
                etiMuestraReproduccion.setText(reproductorMusica.getNombreMP3Running());
            }catch (Exception ex) {
               etiMuestraReproduccion.setText("Error al Reproducir "+reproductorMusica.getNombreMP3Running());
            }
            
        }else{
            reproductorMusica.pauseReproductor();
        }
    }//GEN-LAST:event_botonHerraPlayActionPerformed

    private void itemConfiRunArduinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemConfiRunArduinoActionPerformed
        if(!runArduino.isIsconectado()){
            mostrarBotonesManuales(true);
            itemConfiRunArduino.setEnabled(false);
            hiloEscritorPanel.despierta("ProGym trabajarÃ¡ de manera manual, use los botones desplazamiento para seleccionarla una serie\n"
                    + "de la lista de series, luego presione el boton \"AÃ±adir\" para indroducirla a la tabla del panel de trabajo.\n"
                    + "presione la opciÃ³n \"Parar\" cuando termine de realizar una de ellas y acontiniaciÃ³n ingrese los datos de las repeticiones");
            MODELO_SELECCION_LISTA.setSelectionIndex((byte)-1);
            MODELO_SELECCION_TABLE.setSelectionIndex((byte)-1);
            MODELO_TABLA.setSeleccionarModoMunual(true);
            MODELO_TABLA.setPropiedades( new PropiedadesTabla(TablaImple.TABLA_MUESTRA));
        }else{
            try {
                runArduino.desconectarArduino();
                runArduino.setIsConectado(false);
                hiloEscritorPanel.despierta("ConexiÃ³n con Arduino terminada");
            } catch (Exception ex) {
                hiloEscritorPanel.despierta("ERROR! se produjo una excepciÃ³n al desconectar Arduino");
                return;
            }
        }
                
        actualizaEtiquetaConexion();
        verificarRutinaEnDataBase();
        botonHerraGuardar.setVisible(true);
        botonHerraGuardar.setEnabled(false);
    }//GEN-LAST:event_itemConfiRunArduinoActionPerformed

    private void verificarRutinaEnDataBase(){
        java.util.ArrayList<Serie> series;
        try {
            series = new SerieController().getListaSeries(Fecha.getCodFechaRutina());
        } catch (SQLException ex) {
            return;
        }
        if(series != null && !series.isEmpty()){
            final ResourceBundle rb = ResourceBundle.getBundle("progym/vista/dialogos/TextoGenerico");
            int option = javax.swing.JOptionPane.showConfirmDialog(tablaReporteSeries, rb.getString("TextoSeriesDataBase"));
            if(option == javax.swing.JOptionPane.OK_OPTION){
                MODELO_TABLA.addNewDatos(series);
                MODELO_SELECCION_LISTA.setSelectedItem(series.size()-1);
                MODELO_SELECCION_TABLE.setSelectedItem(series.size());
                Fecha.setValorFechaSerie((short)series.size());
            }
        }
    }
    
    private void botonHerraSubirSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonHerraSubirSerieActionPerformed
        MODELO_SELECCION_LISTA.retrocederSerie();
    }//GEN-LAST:event_botonHerraSubirSerieActionPerformed

    private void botonHerraBajarSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonHerraBajarSerieActionPerformed
        MODELO_SELECCION_LISTA.avanzarSerie();
    }//GEN-LAST:event_botonHerraBajarSerieActionPerformed

    private void botonHerraAÃ±adirSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonHerraAÃ±adirSerieActionPerformed
        if(listaDeSeries.getSelectedIndex() < 0){
            JOptionPane.showMessageDialog(this, "");
        }else{
            try {
                MODELO_TABLA.addManualDato(getSerieActualForTabla());
                MODELO_SELECCION_TABLE.avanzarSerie();
                MODELO_TABLA.setRowEditada(tablaReporteSeries.getSelectedRow());
                MODELO_SELECCION_TABLE.clearSelection();
                botonHerraAÃ±adirSerie.setEnabled(false);
                separadorRemovible.setVisible(true);
                jButton1.setVisible(true);
                hiloEscritorPanel.despierta("Serie aÃ±adida, proceda a completar las repeticiones");
                muestraTitulPanel();
                if(!botonHerraGuardar.isEnabled()) botonHerraGuardar.setEnabled(true);
            } catch(UnsupportedOperationException ex){
                hiloEscritorPanel.despierta(ex.getMessage().toUpperCase());
            }catch (Exception ex) {
                hiloEscritorPanel.despierta("Error! al aÃ±adir la Serie");
            }
        }
    }//GEN-LAST:event_botonHerraAÃ±adirSerieActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MODELO_TABLA.setRowEditada(-1);
        botonHerraAÃ±adirSerie.setEnabled(true);
        separadorRemovible.setVisible(false);
        jButton1.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void itemReporteRutinaActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemReporteRutinaActualActionPerformed
        etiLoading.setIcon(WAIT);
        final Runnable runnable = new Runnable(){
            @Override
            public void run(){
        
                Map parametros = new HashMap();
                ReporteDataSource dataSource;
                try{
                    dataSource = new ReporteDataSource(new RutinaController().getRutina(Fecha.getCodFechaRutina()).getSeries());
                    parametros.put("nameRutina", IdentifyRutina.getIdentitifyRutina().getRutinaActual());
                    parametros.put("codigoRutina", Fecha.getCodFechaRutina());
                }catch(SQLException ex){
                    hiloEscritorPanel.despierta("Error! no hay conexion con la base de datos.".toUpperCase());
                    etiLoading.setIcon(null);
                    return;
                }catch(Exception ex){
                    hiloEscritorPanel.despierta("Error! excepcion inesperada ocurrio con el lector XML de rutinas".toUpperCase());
                    etiLoading.setIcon(null);
                    return;
                }
        
                try {
                    JasperReport jasperReport = (JasperReport) JRLoader.loadObject(dataSource.getReportURL().openStream());
                    JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, dataSource);
                    JasperViewer visor = new JasperViewer(jasperPrint);
                    visor.setTitle("Reporte de Rutina Actual");
                    visor.setVisible(true);
                } catch (IOException | JRException ex) {
                    hiloEscritorPanel.despierta("Reporte NO generado");         
                }
                etiLoading.setIcon(null);
            }
        };
        Thread hilito = new Thread(runnable);
        hilito.start();
    }//GEN-LAST:event_itemReporteRutinaActualActionPerformed

    private void itemConsultaRutinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemConsultaRutinaActionPerformed
        setContainer(panelDivisorDerecho.getLeftComponent());
        panelDivisorDerecho.remove(getContainer());
        panelDivisorDerecho.setLeftComponent(createContainerConsult());
    }//GEN-LAST:event_itemConsultaRutinaActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        String ayuda = "<html>"
                + "<h2>ProGym 1.1.0<h2>"
                + "<p><h4>ProGym es un aplicaciÃ³n java desarrollada por el<br/>joven Ariel Jose Arnedo Cervantes estudiante de 4 semestre de<br/>"
                + "IngenierÃ­a de Sistemas de la Universidad de Cartagena.<br/>Libre distribuciÃ³n y desarrollo con fines netamente academicos y de<br/>enseÃ±anza.</h4></p>"
                + "<br/><br/><h5>Para mÃ¡s informaciÃ³n, escriba un email: arieljose55@hotmail.com</h5>"
                + "</html>";
        JOptionPane.showMessageDialog(this, ayuda);
    }//GEN-LAST:event_jMenuItem3ActionPerformed
    
    private void mostrarBotonesManuales(boolean mostrar){
        botonHerraBajarSerie.setVisible(mostrar);
        botonHerraSubirSerie.setVisible(mostrar);
        botonHerraAÃ±adirSerie.setVisible(mostrar);
    }
    
    private void getListaMP3(boolean aÃ±adir){
        javax.swing.ImageIcon icono = new javax.swing.ImageIcon(getClass().getResource("/progym/recursos/imagenes/icon_MusicMp316x16.png"));
        
        if(aÃ±adir){
            for(Mp3Cancion cancion:reproductorMusica.getListMp3Repository()){
                javax.swing.JMenuItem item = new javax.swing.JMenuItem(cancion.getNombre(), icono);
                this.groupButtonsMp3.add(item);
                this.menuListaRepository.add(item);
            }
            
            
        }else{
            
           for(int i = 0 ; i < reproductorMusica.getListMp3Repository().size() ; i++ ){
               boolean noIguales = true;
               Enumeration <AbstractButton> botones = groupButtonsMp3.getElements();
               
               while(botones.hasMoreElements()){
                   JMenuItem item = (JMenuItem) botones.nextElement();
                   if(reproductorMusica.getListMp3Repository().get(i).getNombre().compareTo(item.getText()) == 0){
                       reproductorMusica.getListMp3Repository().remove(reproductorMusica.getListMp3Repository().get(i));
                       noIguales = false;
                   }
               }
               if(noIguales){
                   groupButtonsMp3.add(new JMenuItem(reproductorMusica.getListMp3Repository().get(i).getNombre(), icono));
                   menuListaRepository.add(new JMenuItem(reproductorMusica.getListMp3Repository().get(i).getNombre(), icono));
               }
           }
        }
        if(itemConfiRunArduino.isEnabled()){
            if(reproductorMusica.getListMp3Repository().isEmpty()) hiloEscritorPanel.despierta("Lista de ReproducciÃ³n VacÃ­a");
            else hiloEscritorPanel.despierta("Lista de ReproducciÃ³n Actualizada");
        }
    }
    
    
    private Serie getSerieActualForTabla() throws Exception{
        Serie serie = new Serie((Fecha.getCodFechaSerie()));
        serie.setNombre(listaDeSeries.getSelectedValue().toString());
        serie.setCodigoRutina(Fecha.getCodFechaRutina());
        setSerieTemporal(serie);
        return serie;
    }
    
    private void muestraTitulPanel(){
        PanelTablaReporte.setTitle("Reporte de Rutina. Ejercicio Actual: "+listaDeSeries.getSelectedValue().toString());
    }
    
    private void itemPortActionPerformed(ActionEvent e){
        
        JCheckBoxMenuItem item=(JCheckBoxMenuItem)e.getSource();
        
        if(item.isSelected()){
            
            if(runArduino.isIsconectado()&&runArduino.getPuerto().compareTo(item.getText())!=0){
                runArduino.setPuerto(item.getText());
                runArduino.setIsConectado(false);
            }else{
                runArduino.setPuerto(item.getText());
                runArduino.despertar();
            }
            itemConfiRunArduino.setText((runArduino.isIsconectado())?"Desconectar Arduino":"Arrancar sin Arduino");
            actualizaEtiquetaConexion();
            
        }
    }
    
    private void actualizaEtiquetaConexion(){
        
        final Runnable run=new Runnable() {

            @Override
            public void run() {
                synchronized (this){
                    try{ this.wait(2000); }catch(InterruptedException ex){}
                }
                if(itemConfiRunArduino.isEnabled()){
                    hiloEscritorPanel.despierta(((runArduino.getEtiMuestraConexion().getText()).compareToIgnoreCase("Arduino No Conectado")==0)? 
                        "La Conexion con Arduino Fracaso":"Conexion con Arduino establecida Correctamente");
                }
                etiMuestraConexion.setText(runArduino.getEtiMuestraConexion().getText());
                etiMuestraConexion.setFont(runArduino.getEtiMuestraConexion().getFont());
                etiMuestraConexion.setForeground(runArduino.getEtiMuestraConexion().getForeground());
                etiMuestraConexion.repaint();
                itemConfiRunArduino.setText((runArduino.isIsconectado())?"Desconectar Arduino":"Arrancar sin Arduino");
                if(runArduino.isIsconectado()){
                    if(!botonHerraRunRutina.isEnabled()) botonHerraRunRutina.setEnabled(true);
                }
                
                getListaMP3(true);
                VentanaPrincipal.this.setWaiting(false);
            }
        };
        
        final Thread hilito=new Thread(run);
        hilito.start();
    }
    
    private void runArduino(){
        runArduino=new ThreadRunArduino();
    }
    
    public void doClose(){
        System.exit(0);
    }

    private void actualizaDataModelOfArduino(Short number) throws Exception{
        
        contadorSerie+=number;
        ind++;
        setSerieAttributes(contadorSerie, contRepeticionColumn);
        
        if(contadorSerie==12){
            contRepeticionColumn++;
            contadorSerie=0;
        }
        if(contRepeticionColumn == 6){
            MODELO_SELECCION_LISTA.avanzarSerie();
            conexionSerie.addSerieAtDatabase(getSerieTemporal(), Fecha.getCodFechaRutina());
            MODELO_TABLA.addDato(getSerieActualForTabla());
            MODELO_SELECCION_TABLE.avanzarSerie();
            contRepeticionColumn=2;
            selectRow++;
            hiloEscritorPanel.despierta("Serie Completada\nAÃ±adida a la Base de Datos");
        }
        if(selectRow == MODELO_LISTA.getSize()){
           temp = false;
        }
        MODELO_TABLA.actulizarRepeticion(getSerieTemporal().getCodigo(),contadorSerie , selectRow, contRepeticionColumn);
    }
    
    @Override
    public void update(Observable o, Object arg) {
        if(arg instanceof String){
            etiMuestraReproduccion.setText(String.valueOf(arg));
        }
        if(arg instanceof Short){
            if(temp){
                try{
                    actualizaDataModelOfArduino((Short)arg);  
                }finally{
                    return;
                }
            }
        }
    }

    public void setSerieAttributes(short value, int columna){
        switch(columna){
            case 2:  getSerieTemporal().setRepe1(value);break;
            case 3:  getSerieTemporal().setRepe2(value);break;
            case 4:  getSerieTemporal().setRepe3(value);break;
            case 5:  getSerieTemporal().setRepe4(value);break;
        }
    }
    
    public Serie getSerieTemporal() {
        return serieTemporal;
    }

    public void setSerieTemporal(Serie serieTemporal) {
        this.serieTemporal = serieTemporal;
    }

    public Component getContainer() {
        return container;
    }

    public void setContainer(Component container) {
        this.container = container;
    }
    
    int ind =0;
    private Component container;
    private ThreadConnectionDatabaseSerie conexionSerie;
    private int selectRow = 0;
    private Serie serieTemporal;
    private boolean temp=false;
    private short contadorSerie = 0;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXTitledPanel PanelTablaReporte;
    private javax.swing.JButton botonHerraAbrir;
    private javax.swing.JButton botonHerraAÃ±adirSerie;
    private javax.swing.JButton botonHerraBajarSerie;
    private javax.swing.JButton botonHerraGuardar;
    private javax.swing.JButton botonHerraNextMusic;
    private javax.swing.JButton botonHerraNuevo;
    private javax.swing.JToggleButton botonHerraPlay;
    private javax.swing.JButton botonHerraPreviusMusic;
    private javax.swing.JToggleButton botonHerraRunRutina;
    private javax.swing.JButton botonHerraSubirSerie;
    private org.jdesktop.swingx.JXEditorPane editorPanelProceso;
    private javax.swing.JLabel etiCodFechaActual;
    private javax.swing.JLabel etiFechaName;
    private javax.swing.JLabel etiLoading;
    private javax.swing.JLabel etiMuestraConexion;
    private javax.swing.JLabel etiMuestraReproduccion;
    private javax.swing.JLabel etiMuestraRutina;
    private javax.swing.ButtonGroup groupButtonsMp3;
    private javax.swing.JMenuItem itemConfiRunArduino;
    private javax.swing.JMenuItem itemConfiRutina;
    private javax.swing.JMenuItem itemConfiSerie;
    private javax.swing.JMenuItem itemConsultaRutina;
    private javax.swing.JMenuItem itemCopiar;
    private javax.swing.JMenuItem itemPegar;
    private javax.swing.JMenuItem itemReporteRutinaActual;
    private javax.swing.JMenuItem itemSalir;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JToolBar.Separator jSeparator11;
    private javax.swing.JPopupMenu.Separator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JToolBar.Separator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private org.jdesktop.swingx.JXFrame jXFrame1;
    private javax.swing.JList listaDeSeries;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JMenu menuConfiArduino;
    private javax.swing.JToolBar menuHerra;
    private javax.swing.JMenu menuListaRepository;
    private javax.swing.JMenu menuSelectPort;
    private org.jdesktop.swingx.JXTitledPanel panelConTitulo;
    private javax.swing.JPanel panelDerecho;
    private javax.swing.JPanel panelDesktop;
    private javax.swing.JSplitPane panelDivisor;
    private javax.swing.JSplitPane panelDivisorDerecho;
    private javax.swing.JPanel panelIzquierdo;
    private javax.swing.JPanel panelState;
    private javax.swing.JScrollPane scrollMuestraProceso;
    private javax.swing.JToolBar.Separator separadorRemovible;
    private javax.swing.JTable tablaReporteSeries;
    // End of variables declaration//GEN-END:variables


    private Container createContainerConsult(){
        JPanel panel = new JPanel(new BorderLayout());
        
        JPanel panelNorte = new JPanel(new GridBagLayout());
        
        JButton boton = new JButton(new ImageIcon(getClass().getResource("/progym/recursos/imagenes/icon_CloseContainer16x16.png")));
        boton.setPreferredSize(new Dimension(20,20));
        boton.setFocusable(false);
        boton.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent evt){
                actionBotonCloseContainer(evt);
            }
        });
        GridBagConstraints confi = new GridBagConstraints();
        confi.gridx = 6;
        confi.gridwidth = 1;
        confi.weightx = 0.2;
        confi.insets = new Insets(3, 10, 3, 3);
        confi.anchor = GridBagConstraints.EAST;
        panelNorte.add(boton, confi);
        
        JLabel etiqueta = new JLabel();
        etiqueta.setFont(new Font("Cambria", Font.ITALIC , 12));
        etiqueta.setText("Ingrese la serie o rutina a consultar");
        confi = new GridBagConstraints();
        confi.gridx = 0;
        confi.gridwidth = 1;
        confi.insets = new Insets(10, 20, 10, 10);
        panelNorte.add(etiqueta, confi);
        
        JTextField campo = new JTextField();
        confi = new GridBagConstraints();
        confi.gridx = 1;
        confi.gridwidth = 3;
        confi.fill = GridBagConstraints.HORIZONTAL;
        confi.weightx = 0.2;
        confi.ipadx = 100;
        panelNorte.add(campo, confi);
        
        
        panel.add(panelNorte, BorderLayout.NORTH);
        ArrayList<Serie> nose = new ArrayList<>();
        
        Serie s = new Serie(12345, "Abdominal"); s.setRepe1((short)12);s.setRepe2((short)12);s.setRepe3((short)12);s.setRepe4((short)12);
        nose.add(s);
        s = new Serie(12324,"Pecho"); s.setRepe1((short)12);s.setRepe2((short)12);s.setRepe3((short)12);s.setRepe4((short)12);
        nose.add(s);
        s = new Serie(12345, "Mancuerna"); s.setRepe1((short)12);s.setRepe2((short)12);s.setRepe3((short)12);s.setRepe4((short)12);
        nose.add(s);
        JPanel panelCenter = new JPanel(new BorderLayout());
        panelCenter.add(new JScrollPane(FactoryTable.createTable(nose)),BorderLayout.CENTER);
        
        panel.add(panelCenter, BorderLayout.CENTER);
        
        
        return panel;
        
    }
    private void actionBotonCloseContainer(ActionEvent evt){
        Component contenedor = getContainer();
        setContainer(panelDivisorDerecho.getLeftComponent());
        panelDivisorDerecho.remove(getContainer());
        panelDivisorDerecho.setLeftComponent(contenedor);
    }
}
